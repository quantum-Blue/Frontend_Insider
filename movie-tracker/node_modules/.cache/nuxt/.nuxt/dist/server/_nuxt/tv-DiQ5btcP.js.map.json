{"file":"tv-DiQ5btcP.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAiGA,UAAM,aAAa;AAAA,MACjB,EAAE,OAAO,WAAW,MAAM,cAAA;AAAA,MAC1B,EAAE,OAAO,eAAe,MAAM,kBAAA;AAAA,MAC9B,EAAE,OAAO,YAAY,MAAM,eAAA;AAAA,MAC3B,EAAE,OAAO,aAAa,MAAM,gBAAA;AAAA,IAAgB;AAI9C,UAAM,UAAU,IAAI,EAAE;AACtB,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,QAAQ,IAAI,IAAI;AACtB,UAAM,eAAe,IAAI,CAAC;AAG1B,UAAM,SAAS,iBAAA;AACM,WAAO,OAAO;;;;;AA/G5B,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,iDAA6C,MAAA,CAAA,CAAA,oXAAA;AAa7BC,oBAAA,aAAZ,aAAQ;;UACd,KAAK,SAAS;AAAA,UACd,IAAI,SAAS;AAAA,UACb,OAAK;AAAA;YAAyGC,KAAAA,OAAO,SAAS,SAAS;;;2BAJ1I,CAYW,GAAAC,QAAAC,UAAA,aAAA;;AADND,qBAAA,GAAAE,eAAA,SAAS,KAAK,CAAA,EAAA;AAAA;;gBAAdC,gBAAAC,gBAAA,SAAS,KAAK,GAAA,CAAA;AAAA,cAAA;AAAA;;;;;;AAMZL,UAAAA,KAAAA,OAAO,SAAI,OAAA;;YAETM,MAAA,OAAA,GAAO;;mBAMFA,MAAA,KAAA,GAAK;6ZAKcA,MAAA,KAAA,CAAK,CAAA,gIAAA;AAAA;;;YAclC,IAAG;AAAA,YACH,OAAM;AAAA,UAAA;6BAFR,CAQW,GAAAL,QAAAC,UAAA,aAAA;;;;;kBAJTK,YAAqB,cAAf,UAAQ;AAAA,gCACdC,YAEM,OAAA;AAAA,oBAFD,OAAM;AAAA,oBAAU,MAAK;AAAA,oBAAO,QAAO;AAAA,oBAAe,SAAQ;AAAA,kBAAA;oBAC7DD,YAAyF,QAAA;AAAA,sBAAnF,kBAAe;AAAA,sBAAQ,mBAAgB;AAAA,sBAAQ,gBAAa;AAAA,sBAAI,GAAE;AAAA,oBAAA;;;;;;;;wBAO3DD,MAAA,OAAA,EAAQ,MAAK,GAAA,EAAA,GAAA,CAArB,SAAI;;cACV,KAAK,KAAK;AAAA,cACV,MAAM;AAAA,cACP,MAAK;AAAA,YAAA;;yFAMIH,eAAA,KAAK,IAAG,IAAKG,MAAA,OAAA,EAAQ,MAAM,CAAA,uBAAWA,MAAA,YAAA,CAAY;;;;;;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderList","$route","_push","_parent","_ssrInterpolate","_createTextVNode","_toDisplayString","_unref","_createVNode","_createBlock"],"sources":["../../../../../../../pages/tv.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n    <!-- Page Header -->\r\n    <div class=\"text-center mb-8\">\r\n      <h1 class=\"text-4xl font-bold text-gray-900 mb-4\">TV Shows</h1>\r\n      <p class=\"text-lg text-gray-600 max-w-2xl mx-auto\">\r\n        Explore the world of television with our curated collection of shows. From trending series to top-rated classics.\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Category Navigation -->\r\n    <div class=\"flex justify-center mb-8\">\r\n      <div class=\"bg-white rounded-lg shadow-sm border p-1\">\r\n        <NuxtLink\r\n          v-for=\"category in categories\"\r\n          :key=\"category.path\"\r\n          :to=\"category.path\"\r\n          :class=\"[\r\n            'px-6 py-3 rounded-md text-sm font-medium transition-colors inline-block',\r\n            $route.path === category.path \r\n              ? 'bg-blue-600 text-white shadow-md' \r\n              : 'text-gray-600 hover:text-blue-600 hover:bg-blue-50'\r\n          ]\"\r\n        >\r\n          {{ category.label }}\r\n        </NuxtLink>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Default Popular TV Shows Preview -->\r\n    <div v-if=\"$route.path === '/tv'\">\r\n      <!-- Loading State -->\r\n      <div v-if=\"loading\" class=\"text-center py-12\">\r\n        <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <p class=\"mt-4 text-gray-600\">Loading TV shows...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div v-else-if=\"error\" class=\"text-center py-12\">\r\n        <svg class=\"mx-auto h-12 w-12 text-red-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </svg>\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Error loading TV shows</h3>\r\n        <p class=\"text-gray-500 mb-4\">{{ error }}</p>\r\n        <button\r\n          @click=\"fetchTvShows\"\r\n          class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n\r\n      <!-- TV Shows Grid -->\r\n      <div v-else class=\"space-y-8\">\r\n        <div class=\"flex items-center justify-between\">\r\n          <h2 class=\"text-2xl font-bold text-gray-900\">Popular TV Shows</h2>\r\n          <NuxtLink \r\n            to=\"/tv/popular\" \r\n            class=\"text-blue-600 hover:text-blue-700 font-medium text-sm flex items-center space-x-1\"\r\n          >\r\n            <span>View All</span>\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\" />\r\n            </svg>\r\n          </NuxtLink>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-6\">\r\n          <PosterCard\r\n            v-for=\"show in tvShows.slice(0, 18)\"\r\n            :key=\"show.id\"\r\n            :item=\"show\"\r\n            type=\"tv\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Page Info -->\r\n        <div class=\"text-center text-sm text-gray-500\">\r\n          Showing {{ Math.min(18, tvShows.length) }} of {{ totalResults }} TV shows\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Child Route Content -->\r\n    <div v-else>\r\n      <NuxtPage />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Page meta\r\ndefinePageMeta({\r\n  title: 'TV Shows - Movie Tracker'\r\n})\r\n\r\n// Categories\r\nconst categories = [\r\n  { label: 'Popular', path: '/tv/popular' },\r\n  { label: 'Now Playing', path: '/tv/now-playing' },\r\n  { label: 'Upcoming', path: '/tv/upcoming' },\r\n  { label: 'Top Rated', path: '/tv/top-rated' }\r\n]\r\n\r\n// State\r\nconst tvShows = ref([])\r\nconst loading = ref(true)\r\nconst error = ref(null)\r\nconst totalResults = ref(0)\r\n\r\n// TMDB API Configuration\r\nconst config = useRuntimeConfig()\r\nconst TMDB_API_KEY = config.public.tmdbApiKey\r\n\r\n// Fetch popular TV shows for preview\r\nconst fetchTvShows = async () => {\r\n  loading.value = true\r\n  error.value = null\r\n  \r\n  try {\r\n    const response = await $fetch(`https://api.themoviedb.org/3/tv/popular`, {\r\n      query: {\r\n        api_key: TMDB_API_KEY,\r\n        page: 1\r\n      }\r\n    })\r\n    \r\n    tvShows.value = response.results\r\n    totalResults.value = response.total_results\r\n  } catch (err) {\r\n    console.error('Error fetching TV shows:', err)\r\n    error.value = 'Failed to load TV shows. Please try again.'\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// Load TV shows on component mount (only for base tv page)\r\nonMounted(() => {\r\n  if (process.client && useRoute().path === '/tv') {\r\n    fetchTvShows()\r\n  }\r\n})\r\n</script>\r\n"],"version":3}