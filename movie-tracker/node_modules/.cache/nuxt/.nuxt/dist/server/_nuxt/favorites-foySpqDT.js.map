{"version":3,"file":"favorites-foySpqDT.js","sources":["../../../../../../../stores/favorites.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\nexport const useFavoritesStore = defineStore('favorites', {\r\n  state: () => ({\r\n    favorites: []\r\n  }),\r\n\r\n  getters: {\r\n    getFavorites: (state) => state.favorites,\r\n    \r\n    isFavorite: (state) => (id, type) => {\r\n      return state.favorites.some(item => item.id === id && item.type === type)\r\n    },\r\n\r\n    favoriteMovies: (state) => {\r\n      return state.favorites.filter(item => item.type === 'movie')\r\n    },\r\n\r\n    favoriteTvShows: (state) => {\r\n      return state.favorites.filter(item => item.type === 'tv')\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    addToFavorites(item) {\r\n      if (!this.isFavorite(item.id, item.type)) {\r\n        this.favorites.push({\r\n          id: item.id,\r\n          title: item.title || item.name,\r\n          poster_path: item.poster_path,\r\n          release_date: item.release_date || item.first_air_date,\r\n          vote_average: item.vote_average,\r\n          type: item.type,\r\n          overview: item.overview\r\n        })\r\n        this.saveToLocalStorage()\r\n      }\r\n    },\r\n\r\n    removeFromFavorites(id, type) {\r\n      const index = this.favorites.findIndex(item => item.id === id && item.type === type)\r\n      if (index > -1) {\r\n        this.favorites.splice(index, 1)\r\n        this.saveToLocalStorage()\r\n      }\r\n    },\r\n\r\n    toggleFavorite(item) {\r\n      if (this.isFavorite(item.id, item.type)) {\r\n        this.removeFromFavorites(item.id, item.type)\r\n      } else {\r\n        this.addToFavorites(item)\r\n      }\r\n    },\r\n\r\n    saveToLocalStorage() {\r\n      if (process.client) {\r\n        localStorage.setItem('movieTracker_favorites', JSON.stringify(this.favorites))\r\n      }\r\n    },\r\n\r\n    loadFromLocalStorage() {\r\n      if (process.client) {\r\n        const stored = localStorage.getItem('movieTracker_favorites')\r\n        if (stored) {\r\n          this.favorites = JSON.parse(stored)\r\n        }\r\n      }\r\n    },\r\n\r\n    clearFavorites() {\r\n      this.favorites = []\r\n      this.saveToLocalStorage()\r\n    }\r\n  }\r\n})\r\n"],"names":[],"mappings":";AAEO,MAAM,oBAAoB,YAAY,aAAa;AAAA,EACxD,OAAO,OAAO;AAAA,IACZ,WAAW,CAAA;AAAA,EAAC;AAAA,EAGd,SAAS;AAAA,IACP,cAAc,CAAC,UAAU,MAAM;AAAA,IAE/B,YAAY,CAAC,UAAU,CAAC,IAAI,SAAS;AACnC,aAAO,MAAM,UAAU,KAAK,CAAA,SAAQ,KAAK,OAAO,MAAM,KAAK,SAAS,IAAI;AAAA,IAC1E;AAAA,IAEA,gBAAgB,CAAC,UAAU;AACzB,aAAO,MAAM,UAAU,OAAO,CAAA,SAAQ,KAAK,SAAS,OAAO;AAAA,IAC7D;AAAA,IAEA,iBAAiB,CAAC,UAAU;AAC1B,aAAO,MAAM,UAAU,OAAO,CAAA,SAAQ,KAAK,SAAS,IAAI;AAAA,IAC1D;AAAA,EAAA;AAAA,EAGF,SAAS;AAAA,IACP,eAAe,MAAM;AACnB,UAAI,CAAC,KAAK,WAAW,KAAK,IAAI,KAAK,IAAI,GAAG;AACxC,aAAK,UAAU,KAAK;AAAA,UAClB,IAAI,KAAK;AAAA,UACT,OAAO,KAAK,SAAS,KAAK;AAAA,UAC1B,aAAa,KAAK;AAAA,UAClB,cAAc,KAAK,gBAAgB,KAAK;AAAA,UACxC,cAAc,KAAK;AAAA,UACnB,MAAM,KAAK;AAAA,UACX,UAAU,KAAK;AAAA,QAAA,CAChB;AACD,aAAK,mBAAA;AAAA,MACP;AAAA,IACF;AAAA,IAEA,oBAAoB,IAAI,MAAM;AAC5B,YAAM,QAAQ,KAAK,UAAU,UAAU,CAAA,SAAQ,KAAK,OAAO,MAAM,KAAK,SAAS,IAAI;AACnF,UAAI,QAAQ,IAAI;AACd,aAAK,UAAU,OAAO,OAAO,CAAC;AAC9B,aAAK,mBAAA;AAAA,MACP;AAAA,IACF;AAAA,IAEA,eAAe,MAAM;AACnB,UAAI,KAAK,WAAW,KAAK,IAAI,KAAK,IAAI,GAAG;AACvC,aAAK,oBAAoB,KAAK,IAAI,KAAK,IAAI;AAAA,MAC7C,OAAO;AACL,aAAK,eAAe,IAAI;AAAA,MAC1B;AAAA,IACF;AAAA,IAEA,qBAAqB;AAAA,IAIrB;AAAA,IAEA,uBAAuB;AAAA,IAOvB;AAAA,IAEA,iBAAiB;AACf,WAAK,YAAY,CAAA;AACjB,WAAK,mBAAA;AAAA,IACP;AAAA,EAAA;AAEJ,CAAC;"}